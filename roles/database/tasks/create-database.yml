---
- name: Install sudo
  yum:
    name: sudo
    state: installed
  tags:
    - base


- name: Create postgres data directory
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: "{{ db_user }}"
    group: "{{ db_group }}"
    mode: 0700
  with_items:
    - "{{ db_master_data_directory }}"
    - "{{ db_worker1_data_directory }}"
  tags:
    - database

- name: Initialize database
  #command: /usr/local/sbin/su-exec {{ db_user }} {{ db_executable_directory }}/pg_ctl start -w -o "-p {{ db_port }}" -D {{ db_data_directory }}/{{ db_node }} -l {{ db_log_directory }}/postgresql-{{ db_node }}.log
  command: ./initdb --pgdata={{ item }} --auth='ident'
  args:
    chdir: "{{ db_executable_directory }}"
  become: yes
  become_user: "{{ db_user }}"
  with_items:
    - "{{ db_master_data_directory }}"
    - "{{ db_worker1_data_directory }}"
  tags:
    - database

- name: Configure PostgreSQL
  copy:
    src: "pg_hba.conf"
    dest: "{{ item }}/pg_hba.conf"
    owner: "{{ db_user }}"
    group: "{{ db_group }}"
    mode: 0700
  with_items:
    - "{{ db_master_data_directory }}"
    - "{{ db_worker1_data_directory }}"
  tags:
    - database

#- name: run database
#  #command: /usr/local/sbin/su-exec {{ db_user }} {{ db_executable_directory }}/pg_ctl start -w -o "-p {{ db_port }}" -D {{ db_data_directory }}/{{ db_node }} -l {{ db_log_directory }}/postgresql-{{ db_node }}.log
#  command: ./pg_ctl --pgdata={{ item.pgdata }} -o "-p {{ item.port }}" -l master_logfile start
#  args:
#    chdir: "{{ db_executable_directory }}"
#  become: yes
#  become_user: "{{ db_user }}"
#  with_items:
#    - { pgdata: "{{ db_master_data_directory }}", port: "{{ db_master_port }}" }
#    - { pgdata: "{{ db_worker1_data_directory }}", port: "{{ db_worker1_port }}" }
#  tags:
#    - database

- name: Preload citus extension
  command: echo "shared_preload_libraries = 'citus'" >> {{ item }}/postgresql.conf
  become: yes
  become_user: "{{ db_user }}"
  with_items:
    - "{{ db_master_data_directory }}"
    - "{{ db_worker1_data_directory }}"
  tags:
    - database

- name: Configure systemd postgres instances
  template:
    src: "postgres-{{ item }}.service.j2"
    dest: "/etc/systemd/system/postgres-{{ item }}.service"
    mode: 664
  with_items:
    - "master"
    - "worker1"
  tags:
    - database

#- name: Ensure PostgreSQL is restarted
#  systemd:
#    name: "postgres-{{ item }}"
#    state: started
#    daemon_reload: yes
#  with_items:
#    - "master"
#    - "worker1"
#  tags:
#    - database

- name: Run database in background
  shell: nohup ./pg_ctl --pgdata={{ item.pgdata }} -o "-p {{ item.port }}" -l {{ db_log_directory }}/{{ item.logfile }} start </dev/null >/dev/null 2>&1 &
  #shell: nohup ./postgres -p {{ item.port }} -D {{ item.pgdata }} -r {{ db_log_directory }}/{{ item.logfile }} </dev/null >/dev/null 2>&1 &
  #command: ./postgres -p {{ item.port }} -D {{ item.pgdata }} -r {{ db_log_directory }}/{{ item.logfile }} &
  args:
    chdir: "{{ db_executable_directory }}"
  become: yes
  become_user: "{{ db_user }}"
  with_items:
    - { pgdata: "{{ db_master_data_directory }}", port: "{{ db_master_port }}", logfile: "psql-master.log" }
    - { pgdata: "{{ db_worker1_data_directory }}", port: "{{ db_worker1_port }}", logfile: "psql-worker1.log" }
  tags:
    - database

- name: Create database
  postgresql_db:
    name: "{{ db_name }}"
    port: "{{ item }}"
    login_host: "localhost"
    login_user: "{{ db_user }}"
  #become: yes
  #become_user: "{{ db_user }}"
  with_items:
    - "{{ db_master_port }}"
    - "{{ db_worker1_port }}"
  tags:
    - database

- name: Create Citus extension
  postgresql_ext:
    name: citus
    db: "{{ db_name }}"
    port: "{{ item }}"
    login_host: "localhost"
    login_user: "{{ db_user }}"
  with_items:
    - "{{ db_master_port }}"
    - "{{ db_worker1_port }}"
  tags:
    - database

- name: Create Postgis extensions
  postgresql_ext:
    name: postgis
    db: "{{ db_name }}"
    port: "{{ item }}"
    login_host: "localhost"
    login_user: "{{ db_user }}"
  with_items:
    - "{{ db_master_port }}"
    - "{{ db_worker1_port }}"
  tags:
    - database

- name: Create Hstore extensions
  postgresql_ext:
    name: hstore
    db: "{{ db_name }}"
    port: "{{ item }}"
    login_host: "localhost"
    login_user: "{{ db_user }}"
  with_items:
    - "{{ db_master_port }}"
    - "{{ db_worker1_port }}"
  tags:
    - database